#!/bin/bash

# Bash scripts to install Docker-CE engine and Kubernetes engine
# to a CentOS box.

# Sets up a multi node kubernetes cluster
# with a master node and worker node(s)

# Exit upon encountering an error
set -euo pipefail

# Set the base route
ROOT_DIR=$(pwd)

# Run the script to set up the env variables and other custom functions
source $ROOT_DIR/utils.sh

    ###################################################################################
    ###                                                                             ###
    ###            !!! TO BE EXECUTED AS NORMAL USER !!!                            ###
    ###                 EXECUTED IN THE MASTER NODE                                 ###
    ###                                                                             ###
    ###################################################################################


function calico {
    info "Setting up the networking for the kubernetes cluster using calico"
    # Initialize the kubernetes master and assign the pod network
    # Take note and save the join command generated by this command.
    # The  --apiserver-advertise-address  is the external ip address of the server, if not provided it automatically picks the internal one.
    sudo kubeadm init --pod-network-cidr=192.168.0.0/16 # this is the default in the calico manifests, if changed then change in mainifests as well
    
    # Configure Kubectl
    mkdir -p $HOME/.kube
    sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
    sudo chown $(id -u):$(id -g) $HOME/.kube/config

    # Install Calico
    kubectl apply -f https://docs.projectcalico.org/v3.10/manifests/calico.yaml

    # monitor the state of all the pods created. CTRL+C to quit
    watch kubectl get pods --all-namespaces

    # Remove taints to allow scheduling of pods on the master.
    kubectl taint nodes --all node-role.kubernetes.io/master-

    # Confirm that you now have a node in your cluster with the following command
    kubectl get nodes -o wide
}

function UIDashboard {
    info "Setting up the kubernetes UI Dashboard"
    # Deploy the kubernetes dashboard
    kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0-beta4/aio/deploy/recommended.yaml

    # Create an admin account called k8s-admin and give it a cluster role of admin
    kubectl --namespace kube-system create serviceaccount k8s-admin
    kubectl create clusterrolebinding k8s-admin --serviceaccount=kube-system:k8s-admin --clusterrole=cluster-admin
}

function run {
    calico
    UIDashboard
}

run
